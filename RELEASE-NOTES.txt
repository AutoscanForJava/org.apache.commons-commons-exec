<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
$Id$

                            Commons JEXL Package
                                Version 2.0
                               Release Notes


INTRODUCTION:
=============

JEXL is an Expression Language supporting most of the constructs in the
JSTL Expression Language, along with some additional extensions.

  http://commons.apache.org/jexl/

Changes in this version include:

Incompatible Changes
====================

Now requires Java 1.5 or later.

The following classes have been deprecated:

  * ExpressionFactory
  * ScriptFactory

  Please create a JexlEngine and use createExpression() or createScript()
  instead.

The following classes have been removed:

  * VelMethod
  * VelPropertyGet
  * VelPropertySet

  Please use JexlMethod, JexlPropertyGet and JexlPropertySet instead.

The following methods have been removed:

  * Info.getTemplateName() - use Info.getName() instead

Division (/ operator) behavior change:
  * Division between integers no longer casts its operands to double; integer division
    allways results in a integer.

New Features:
=============

Assignment expression: a = b (and a.b.c = d)
   * Assigns a variable (ant-like variable or bean-property)

Ternary operator expression: a ? b : c  (and a ?: c)
   * The usual inline conditional shortcut and its 'Elvis' form (a ?: b evaluates as a ? a : b)

Constructor call expression: new('my.class.name', arguments...)
   * Creates a new instance of a class using the most appropriate constructor according
     to the actual arguments

Function namespace: ns:func(arguments...)
   * A function namespace allows the use of class or instance methods in function calls

UnifiedJEXL
   * Adds ${...} and #{...} JSP/EL syntax support on top of the JexlEngine

JSR-223 support
   * Implement JSR-223 Scripting Engine for JEXL script (need BSF-3.0 on Java < 6)

Error and exception handling
   * Configuring the leniency and verbosity of the Jexl engine allows user control over the
     error handling policy

Bugs fixed:
===========


Other Changes:
==============

o Add @since 2.0 tags to code so we can track API additions via Javadoc

