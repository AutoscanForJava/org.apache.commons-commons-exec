<?xml version="1.0"?>
<!--
  Copyright 2002,2004 The Apache Software Foundation.
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>

    <properties>
        <title>Commons JEXL Overview</title>
    </properties>

    <body>

    <section name="Java Expression Language (JEXL)">

    <p>
      Java Expression Language (JEXL) is an expression language engine which can be 
      embedded in applications and frameworks.  <!--It implements an extended version of 
      the Expression Language of the JavaServer Pages Standard Tag Library version 1.1 
      (JSTL) and JavaServer Pages version 2.0 (JSP).-->
    </p>

    <p>
      The motivation was to bring some of the lessons learned by the Velocity
      community about expression languages in templating to a wider audience.
      Jelly needed Velocity-ish method access; it Just had to have it.
    </p>

    <p>
      Here is an example of using Jexl :
    </p>

    <source><![CDATA[
    // Create an expression object
    Expression e = ExpressionFactory.createExpression("foo.innerFoo.bar()");

    // Create a context and add data
    JexlContext jc = JexlHelper.createContext();
    jc.getVars().put("foo", new Foo() );

    // Now evaluate the expression, getting the result
    Object o = e.evaluate(jc);]]></source>

    <p>
    Jexl has extended the JSTL in a few ways :
    </p>

    <ul>
        <li>
        Support for invocation of any accessible method (see example above).
        </li>
        <li>
        Added a general size() method, which works on String, returning length,
        Map, returning # of keys, and List and arrays, returning the
        number of elements.
        </li>
        <li>
        Optional syntax for the 'empty' function :   empty(obj)
        </li>
        <li>
        Misc : '+' has been overloaded to be use as a String concatenation operator
        </li>

     </ul>

    </section>

    <section name="Anyone Using It Yet?">

        <p>
        James Strachan's
        <a href="http://jakarta.apache.org/commons/jelly.html">
        Jelly</a>.
        </p>

        <p>
        Jexl and Jelly are two components of the Jakarta Je*l* Pack
        </p>

    </section>

    <section name="Releases">
        <p>
        Jelly is not yet released, but a nightly build can be downloaded.
        See the <a href="downloads.html">downloads</a> page for information on obtaining releases.
        </p>
    </section>

    <section name="Related Resources">
        <!--<p>
		  JEXL is not a product of the Java Community Process (JCP).
		  JSP 2.0 is covered by Java Specification Requests (JSR) 
		  <a href="http://www.jcp.org/en/jsr/detail?id=152">JSR-152: JavaServer 
		  Pages 2.0 Specification</a>.  JSTL 1.1 is covered by 
		  <a href="http://jcp.org/en/jsr/detail?id=52">JSR 52: A Standard 
		  Tag Library for JavaServer Pages</a>.
		</p>-->
		<p>
		  <a href="http://jakarta.apache.org/velocity">Jakarta Velocity</a> implements 
		  a similar expression language.
		</p>
    </section>

 </body>
</document>

